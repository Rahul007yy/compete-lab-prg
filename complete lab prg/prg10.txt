-- Step 1: Create the Employee Table
CREATE TABLE employee (
    emp_num NUMBER PRIMARY KEY,
    salary NUMBER
);

-- Step 2: Create the Trigger
SET SERVEROUTPUT ON;

CREATE OR REPLACE TRIGGER display_salary_changes
BEFORE DELETE OR INSERT OR UPDATE ON employee
FOR EACH ROW
DECLARE
    sal_diff NUMBER;
BEGIN
    IF INSERTING THEN
        sal_diff := :NEW.salary;  -- For new records, old salary is NULL
        DBMS_OUTPUT.PUT_LINE('New salary: ' || :NEW.salary);
        DBMS_OUTPUT.PUT_LINE('Salary difference: ' || sal_diff);
    ELSIF UPDATING THEN
        sal_diff := :NEW.salary - :OLD.salary;
        DBMS_OUTPUT.PUT_LINE('Old salary: ' || :OLD.salary);
        DBMS_OUTPUT.PUT_LINE('New salary: ' || :NEW.salary);
        DBMS_OUTPUT.PUT_LINE('Salary difference: ' || sal_diff);
    ELSIF DELETING THEN
        DBMS_OUTPUT.PUT_LINE('Deleting employee with salary: ' || :OLD.salary);
    END IF;
END;
/

-- Step 3: Insert a New Employee
BEGIN
    INSERT INTO employee (emp_num, salary) VALUES (1, 50000);
    INSERT INTO employee (emp_num, salary) VALUES (2, 60000);
    INSERT INTO employee (emp_num, salary) VALUES (3, 55000);
    COMMIT;  -- Commit the changes
END;
/

-- Step 4: Update the Employee's Salary
BEGIN
    UPDATE employee SET salary = salary + 5000 WHERE emp_num = 1;
    COMMIT;  -- Commit the changes
END;
/

-- Step 5: Delete an Employee
BEGIN
    DELETE FROM employee WHERE emp_num = 2;
    COMMIT;  -- Commit the changes
END;
/
